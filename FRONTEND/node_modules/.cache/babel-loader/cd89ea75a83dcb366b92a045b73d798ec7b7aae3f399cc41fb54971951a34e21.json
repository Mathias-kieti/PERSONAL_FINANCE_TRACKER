{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  if (error.response) {\n    // Token expired or invalid\n    if (error.response.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n\n    // Server error\n    if (error.response.status >= 500) {\n      console.error('Server error:', error.response.data);\n    }\n  } else if (error.request) {\n    console.error('Network error:', error.request);\n  } else {\n    console.error('Error:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// API methods\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getProfile: () => api.get('/auth/me'),\n  updateProfile: data => api.put('/auth/profile', data),\n  changePassword: data => api.put('/auth/change-password', data),\n  logout: () => api.post('/auth/logout')\n};\nexport const transactionAPI = {\n  getAll: params => api.get('/transaction', {\n    params\n  }),\n  getOne: id => api.get(`/transaction/${id}`),\n  create: data => api.post('/transaction', data),\n  update: (id, data) => api.put(`/transaction/${id}`, data),\n  delete: id => api.delete(`/transaction/${id}`),\n  getStats: params => api.get('/transaction/stat', {\n    params\n  }),\n  bulkCreate: transaction => api.post('/transaction/bulk', {\n    transaction\n  })\n};\nexport const budgetAPI = {\n  getAll: () => api.get('/budget'),\n  getOne: id => api.get(`/budget/${id}`),\n  create: data => api.post('/budget', data),\n  update: (id, data) => api.put(`/budget/${id}`, data),\n  delete: id => api.delete(`/budget/${id}`),\n  getWithSpending: () => api.get('/budget/with-spending')\n};\nexport const goalAPI = {\n  getAll: () => api.get('/goal'),\n  getOne: id => api.get(`/goal/${id}`),\n  create: data => api.post('/goal', data),\n  update: (id, data) => api.put(`/goal/${id}`, data),\n  delete: id => api.delete(`/goal/${id}`),\n  updateProgress: (id, amount) => api.patch(`/goal/${id}/progress`, {\n    amount\n  })\n};\nexport const billAPI = {\n  getAll: () => api.get('/bill'),\n  getOne: id => api.get(`/bill/${id}`),\n  create: data => api.post('/bill', data),\n  update: (id, data) => api.put(`/bill/${id}`, data),\n  delete: id => api.delete(`/bill/${id}`),\n  getUpcoming: (days = 7) => api.get('/bill/upcoming', {\n    params: {\n      days\n    }\n  }),\n  markAsPaid: (id, amount) => api.patch(`/bill/${id}/paid`, {\n    amount: amount,\n    paidDate: new Date().toISOString(),\n    method: 'other',\n    notes: 'Marked as paid via app'\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","status","removeItem","window","location","href","console","message","authAPI","login","credentials","post","register","userData","getProfile","get","updateProfile","put","changePassword","logout","transactionAPI","getAll","params","getOne","id","update","delete","getStats","bulkCreate","transaction","budgetAPI","getWithSpending","goalAPI","updateProgress","amount","patch","billAPI","getUpcoming","days","markAsPaid","paidDate","Date","toISOString","method","notes"],"sources":["C:/Users/user/OneDrive/Desktop/PERSONAL_FINANCIAL_TRACKER/FRONTEND/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      // Token expired or invalid\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/login';\r\n      }\r\n      \r\n      // Server error\r\n      if (error.response.status >= 500) {\r\n        console.error('Server error:', error.response.data);\r\n      }\r\n    } else if (error.request) {\r\n      console.error('Network error:', error.request);\r\n    } else {\r\n      console.error('Error:', error.message);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API methods\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  getProfile: () => api.get('/auth/me'),\r\n  updateProfile: (data) => api.put('/auth/profile', data),\r\n  changePassword: (data) => api.put('/auth/change-password', data),\r\n  logout: () => api.post('/auth/logout'),\r\n};\r\n\r\nexport const transactionAPI = {\r\n  getAll: (params) => api.get('/transaction', { params }),\r\n  getOne: (id) => api.get(`/transaction/${id}`),\r\n  create: (data) => api.post('/transaction', data),\r\n  update: (id, data) => api.put(`/transaction/${id}`, data),\r\n  delete: (id) => api.delete(`/transaction/${id}`),\r\n  getStats: (params) => api.get('/transaction/stat', { params }),\r\n  bulkCreate: (transaction) => api.post('/transaction/bulk', { transaction }),\r\n};\r\n\r\nexport const budgetAPI = {\r\n  getAll: () => api.get('/budget'),\r\n  getOne: (id) => api.get(`/budget/${id}`),\r\n  create: (data) => api.post('/budget', data),\r\n  update: (id, data) => api.put(`/budget/${id}`, data),\r\n  delete: (id) => api.delete(`/budget/${id}`),\r\n  getWithSpending: () => api.get('/budget/with-spending'),\r\n};\r\n\r\nexport const goalAPI = {\r\n  getAll: () => api.get('/goal'),\r\n  getOne: (id) => api.get(`/goal/${id}`),\r\n  create: (data) => api.post('/goal', data),\r\n  update: (id, data) => api.put(`/goal/${id}`, data),\r\n  delete: (id) => api.delete(`/goal/${id}`),\r\n  updateProgress: (id, amount) => api.patch(`/goal/${id}/progress`, { amount }),\r\n};\r\n\r\nexport const billAPI = {\r\n  getAll: () => api.get('/bill'),\r\n  getOne: (id) => api.get(`/bill/${id}`),\r\n  create: (data) => api.post('/bill', data),\r\n  update: (id, data) => api.put(`/bill/${id}`, data),\r\n  delete: (id) => api.delete(`/bill/${id}`),\r\n  getUpcoming: (days = 7) => api.get('/bill/upcoming', { params: { days } }),\r\n  markAsPaid: (id, amount) => api.patch(`/bill/${id}/paid`, {\r\n    amount: amount,\r\n    paidDate: new Date().toISOString(),\r\n    method: 'other', \r\n    notes: 'Marked as paid via app'\r\n  }),\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
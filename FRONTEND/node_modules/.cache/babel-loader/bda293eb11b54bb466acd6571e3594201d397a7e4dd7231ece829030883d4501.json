{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\PERSONAL_FINANCIAL_TRACKER\\\\FRONTEND\\\\src\\\\Components\\\\Transactions\\\\TransactionList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TransactionForm from './TransactionForm';\nimport TransactionItem from './TransactionItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n\n  // Get token from localStorage\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Fetch transactions from backend\n  // Fetch transactions from backend\n  const fetchTransactions = async () => {\n    try {\n      const token = getToken();\n      const response = await fetch('http://localhost:5000/api/transaction', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('🔍 DEBUG - Response status:', response.status);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('🔍 DEBUG - Received data:', data);\n        console.log('🔍 DEBUG - Data type:', typeof data);\n        console.log('🔍 DEBUG - Is array?', Array.isArray(data));\n\n        // ✅ Handle different response formats\n        if (Array.isArray(data)) {\n          setTransactions(data);\n        } else if (data.transactions && Array.isArray(data.transactions)) {\n          setTransactions(data.transactions); // If backend returns { transactions: [] }\n        } else if (data.data && Array.isArray(data.data)) {\n          setTransactions(data.data); // If backend returns { data: [] }\n        } else {\n          console.error('Unexpected data format:', data);\n          setTransactions([]); // Set empty array as fallback\n        }\n      } else {\n        console.error('Failed to fetch transactions, status:', response.status);\n        setTransactions([]); // Set empty array on error\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n      setTransactions([]); // Set empty array on error\n    }\n  };\n  // Add transaction to backend\n  const addTransaction = async transactionData => {\n    try {\n      const token = getToken();\n      const backendData = {\n        type: transactionData.type,\n        category: transactionData.category,\n        amount: Number(transactionData.amount),\n        date: transactionData.date,\n        description: transactionData.category\n      };\n      console.log('Sending transaction:', backendData);\n      const response = await fetch('http://localhost:5000/api/transaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(backendData)\n      });\n      if (response.ok) {\n        const newTransaction = await response.json();\n        setTransactions(prev => [...prev, newTransaction]);\n        console.log('Transaction saved successfully:', newTransaction);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to add transaction:', errorData);\n      }\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n\n  // Delete transaction from backend\n  const deleteTransaction = async id => {\n    try {\n      const token = getToken();\n      const response = await fetch(`http://localhost:5000/api/transaction/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setTransactions(prev => prev.filter(tx => tx._id !== id));\n      } else {\n        console.error('Failed to delete transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction:', error);\n    }\n  };\n\n  // Fetch transactions on component mount\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-gray-800\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onSubmit: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center py-8\",\n        children: \"No transactions yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : transactions.map(tx => /*#__PURE__*/_jsxDEV(TransactionItem, {\n        transaction: tx,\n        onDelete: deleteTransaction\n      }, tx._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionList, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","useEffect","TransactionForm","TransactionItem","jsxDEV","_jsxDEV","TransactionList","_s","transactions","setTransactions","getToken","localStorage","getItem","fetchTransactions","token","response","fetch","headers","console","log","status","ok","data","json","Array","isArray","error","addTransaction","transactionData","backendData","type","category","amount","Number","date","description","method","body","JSON","stringify","newTransaction","prev","errorData","deleteTransaction","id","filter","tx","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","map","transaction","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/PERSONAL_FINANCIAL_TRACKER/FRONTEND/src/Components/Transactions/TransactionList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TransactionForm from './TransactionForm';\r\nimport TransactionItem from './TransactionItem';\r\n\r\nconst TransactionList = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  // Get token from localStorage\r\n  const getToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  // Fetch transactions from backend\r\n  // Fetch transactions from backend\r\nconst fetchTransactions = async () => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch('http://localhost:5000/api/transaction', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    console.log('🔍 DEBUG - Response status:', response.status);\r\n    \r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log('🔍 DEBUG - Received data:', data);\r\n      console.log('🔍 DEBUG - Data type:', typeof data);\r\n      console.log('🔍 DEBUG - Is array?', Array.isArray(data));\r\n      \r\n      // ✅ Handle different response formats\r\n      if (Array.isArray(data)) {\r\n        setTransactions(data);\r\n      } else if (data.transactions && Array.isArray(data.transactions)) {\r\n        setTransactions(data.transactions); // If backend returns { transactions: [] }\r\n      } else if (data.data && Array.isArray(data.data)) {\r\n        setTransactions(data.data); // If backend returns { data: [] }\r\n      } else {\r\n        console.error('Unexpected data format:', data);\r\n        setTransactions([]); // Set empty array as fallback\r\n      }\r\n    } else {\r\n      console.error('Failed to fetch transactions, status:', response.status);\r\n      setTransactions([]); // Set empty array on error\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching transactions:', error);\r\n    setTransactions([]); // Set empty array on error\r\n  }\r\n};\r\n  // Add transaction to backend\r\n  const addTransaction = async (transactionData) => {\r\n    try {\r\n      const token = getToken();\r\n      \r\n      const backendData = {\r\n        type: transactionData.type,\r\n        category: transactionData.category,\r\n        amount: Number(transactionData.amount),\r\n        date: transactionData.date,\r\n        description: transactionData.category\r\n      };\r\n\r\n      console.log('Sending transaction:', backendData);\r\n\r\n      const response = await fetch('http://localhost:5000/api/transaction', {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(backendData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newTransaction = await response.json();\r\n        setTransactions(prev => [...prev, newTransaction]);\r\n        console.log('Transaction saved successfully:', newTransaction);\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error('Failed to add transaction:', errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding transaction:', error);\r\n    }\r\n  };\r\n\r\n  // Delete transaction from backend\r\n  const deleteTransaction = async (id) => {\r\n    try {\r\n      const token = getToken();\r\n      \r\n      const response = await fetch(`http://localhost:5000/api/transaction/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        setTransactions(prev => prev.filter(tx => tx._id !== id));\r\n      } else {\r\n        console.error('Failed to delete transaction');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting transaction:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch transactions on component mount\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 space-y-6\">\r\n      <h1 className=\"text-2xl font-bold text-gray-800\">Transactions</h1>\r\n      \r\n      <TransactionForm onSubmit={addTransaction} />\r\n\r\n      <div className=\"space-y-3\">\r\n        {transactions.length === 0 ? (\r\n          <p className=\"text-gray-500 text-center py-8\">No transactions yet</p>\r\n        ) : (\r\n          transactions.map((tx) => (\r\n            <TransactionItem\r\n              key={tx._id}\r\n              transaction={tx}\r\n              onDelete={deleteTransaction}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
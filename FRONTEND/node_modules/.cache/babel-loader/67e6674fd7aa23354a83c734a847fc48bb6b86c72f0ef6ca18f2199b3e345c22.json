{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\PERSONAL_FINANCIAL_TRACKER\\\\FRONTEND\\\\src\\\\Components\\\\Transactions\\\\TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    type: 'expense',\n    category: '',\n    amount: '',\n    date: new Date().toISOString().split('T')[0],\n    goalId: ''\n  });\n  const [goals, setGoals] = useState([]);\n  const [loadingGoals, setLoadingGoals] = useState(true);\n  const [error, setError] = useState('');\n\n  // Categories arrays\n  const expenseCategories = ['food', 'transportation', 'utilities', 'entertainment', 'healthcare', 'shopping', 'education', 'travel', 'housing', 'insurance', 'debt', 'personal_care', 'gifts', 'charity', 'other'];\n  const incomeCategories = ['salary', 'freelance', 'business', 'investment', 'bonus', 'rental', 'dividend', 'interest', 'refund', 'other'];\n  const categories = formData.type === 'income' ? incomeCategories : expenseCategories;\n\n  // Get token from localStorage\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Fetch goals for the dropdown\n  useEffect(() => {\n    const fetchGoals = async () => {\n      try {\n        setLoadingGoals(true);\n        setError('');\n        const token = getToken();\n        if (!token) {\n          setError('No authentication token found');\n          setLoadingGoals(false);\n          return;\n        }\n        console.log('🔍 Fetching goals for transaction form...');\n        const response = await fetch('http://localhost:5000/api/goal', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('📡 Goals API Response status:', response.status);\n        if (response.ok) {\n          const data = await response.json();\n          console.log('✅ Goals API Response data:', data);\n\n          // Handle different response formats safely\n          let goalsArray = [];\n          if (Array.isArray(data)) {\n            goalsArray = data;\n          } else if (data && typeof data === 'object') {\n            if (Array.isArray(data.data)) {\n              goalsArray = data.data;\n            } else if (Array.isArray(data.goals)) {\n              goalsArray = data.goals;\n            } else {\n              goalsArray = Object.values(data).filter(item => item && typeof item === 'object' && item.name !== undefined);\n            }\n          }\n          console.log(`✅ Processed ${goalsArray.length} goals:`, goalsArray);\n          if (!Array.isArray(goalsArray)) {\n            goalsArray = [];\n          }\n          setGoals(goalsArray);\n          if (goalsArray.length === 0) {\n            setError('No goals found. Please create goals first.');\n          }\n        } else {\n          const errorText = await response.text();\n          console.error('❌ Goals API Error:', errorText);\n          setError(`Failed to load goals: ${response.status}`);\n        }\n      } catch (err) {\n        console.error('❌ Network error fetching goals:', err);\n        setError('Network error loading goals. Check if backend is running.');\n      } finally {\n        setLoadingGoals(false);\n      }\n    };\n    fetchGoals();\n  }, []);\n  const handleChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!formData.category || !formData.amount || !formData.date) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    // Only include goalId if it's not empty\n    const submissionData = {\n      type: formData.type,\n      category: formData.category,\n      amount: Number(formData.amount),\n      date: formData.date,\n      description: formData.category\n    };\n\n    // Only add goalId if it's selected \n    if (formData.goalId) {\n      submissionData.goalId = formData.goalId;\n    }\n    console.log('🎯 [DEBUG] Submitting transaction with goalId:', formData.goalId || 'None', 'Full data:', submissionData);\n    onSubmit(submissionData);\n\n    // Reset form\n    setFormData({\n      type: 'expense',\n      category: '',\n      amount: '',\n      date: new Date().toISOString().split('T')[0],\n      goalId: ''\n    });\n  };\n  const safeGoals = Array.isArray(goals) ? goals : [];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-white p-4 rounded-lg shadow space-y-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: formData.type,\n        onChange: handleChange,\n        className: \"w-1/3 border rounded-lg px-3 py-2 text-sm\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        value: formData.category,\n        onChange: handleChange,\n        className: \"flex-1 border rounded-lg px-3 py-2 text-sm\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category.charAt(0).toUpperCase() + category.slice(1).replace('_', ' ')\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        value: formData.amount,\n        onChange: handleChange,\n        placeholder: \"Amount (required)\",\n        className: \"flex-1 border rounded-lg px-3 py-2 text-sm\",\n        required: true,\n        min: \"0.01\",\n        step: \"0.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: formData.date,\n        onChange: handleChange,\n        className: \"w-1/2 border rounded-lg px-3 py-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"goalId\",\n        value: formData.goalId,\n        onChange: handleChange,\n        className: \"w-full border rounded-lg px-3 py-2 text-sm\",\n        disabled: loadingGoals,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Allocate to Goal (Optional) --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), loadingGoals ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Loading goals...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this) : safeGoals.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"No goals found. Create goals first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this) : safeGoals.map(goal => {\n          var _goal$targetAmount;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: goal._id,\n            children: [goal.name, \" - Target: KSH \", (_goal$targetAmount = goal.targetAmount) === null || _goal$targetAmount === void 0 ? void 0 : _goal$targetAmount.toLocaleString()]\n          }, goal._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 mt-1\",\n        children: [\"Status: \", loadingGoals ? 'Loading...' : error ? `Error: ${error}` : `Found ${safeGoals.length} goals`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400\",\n      disabled: loadingGoals,\n      children: loadingGoals ? 'Loading...' : 'Add Transaction'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"0XOsqeG1nnG9fNjKP//w+qHUIDk=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionForm","onSubmit","_s","formData","setFormData","type","category","amount","date","Date","toISOString","split","goalId","goals","setGoals","loadingGoals","setLoadingGoals","error","setError","expenseCategories","incomeCategories","categories","getToken","localStorage","getItem","fetchGoals","token","console","log","response","fetch","headers","status","ok","data","json","goalsArray","Array","isArray","Object","values","filter","item","name","undefined","length","errorText","text","err","handleChange","e","prev","target","value","handleSubmit","preventDefault","alert","submissionData","Number","description","safeGoals","className","children","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","map","charAt","toUpperCase","slice","replace","placeholder","min","step","disabled","goal","_goal$targetAmount","_id","targetAmount","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/PERSONAL_FINANCIAL_TRACKER/FRONTEND/src/Components/Transactions/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TransactionForm = ({ onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    type: 'expense',\r\n    category: '',\r\n    amount: '',\r\n    date: new Date().toISOString().split('T')[0],\r\n    goalId: '' \r\n  });\r\n\r\n  const [goals, setGoals] = useState([]); \r\n  const [loadingGoals, setLoadingGoals] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Categories arrays\r\n  const expenseCategories = [\r\n    'food', 'transportation', 'utilities', 'entertainment', \r\n    'healthcare', 'shopping', 'education', 'travel', 'housing',\r\n    'insurance', 'debt', 'personal_care', 'gifts', 'charity', 'other'\r\n  ];\r\n\r\n  const incomeCategories = [\r\n    'salary', 'freelance', 'business', 'investment', 'bonus', \r\n    'rental', 'dividend', 'interest', 'refund', 'other'\r\n  ];\r\n\r\n  const categories = formData.type === 'income' ? incomeCategories : expenseCategories;\r\n\r\n  // Get token from localStorage\r\n  const getToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  // Fetch goals for the dropdown\r\n  useEffect(() => {\r\n    const fetchGoals = async () => {\r\n      try {\r\n        setLoadingGoals(true);\r\n        setError('');\r\n        const token = getToken();\r\n        \r\n        if (!token) {\r\n          setError('No authentication token found');\r\n          setLoadingGoals(false);\r\n          return;\r\n        }\r\n\r\n        console.log('🔍 Fetching goals for transaction form...');\r\n        \r\n        const response = await fetch('http://localhost:5000/api/goal', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        console.log('📡 Goals API Response status:', response.status);\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log('✅ Goals API Response data:', data);\r\n          \r\n          // Handle different response formats safely\r\n          let goalsArray = [];\r\n          \r\n          if (Array.isArray(data)) {\r\n            goalsArray = data;\r\n          } else if (data && typeof data === 'object') {\r\n            if (Array.isArray(data.data)) {\r\n              goalsArray = data.data;\r\n            } else if (Array.isArray(data.goals)) {\r\n              goalsArray = data.goals;\r\n            } else {\r\n              goalsArray = Object.values(data).filter(item => \r\n                item && typeof item === 'object' && item.name !== undefined\r\n              );\r\n            }\r\n          }\r\n          \r\n          console.log(`✅ Processed ${goalsArray.length} goals:`, goalsArray);\r\n        \r\n          if (!Array.isArray(goalsArray)) {\r\n            goalsArray = [];\r\n          }\r\n          \r\n          setGoals(goalsArray);\r\n          \r\n          if (goalsArray.length === 0) {\r\n            setError('No goals found. Please create goals first.');\r\n          }\r\n        } else {\r\n          const errorText = await response.text();\r\n          console.error('❌ Goals API Error:', errorText);\r\n          setError(`Failed to load goals: ${response.status}`);\r\n        }\r\n      } catch (err) {\r\n        console.error('❌ Network error fetching goals:', err);\r\n        setError('Network error loading goals. Check if backend is running.');\r\n      } finally {\r\n        setLoadingGoals(false);\r\n      }\r\n    };\r\n\r\n    fetchGoals();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.category || !formData.amount || !formData.date) {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    // Only include goalId if it's not empty\r\n    const submissionData = {\r\n      type: formData.type,\r\n      category: formData.category,\r\n      amount: Number(formData.amount),\r\n      date: formData.date,\r\n      description: formData.category\r\n    };\r\n\r\n    // Only add goalId if it's selected \r\n    if (formData.goalId) {\r\n      submissionData.goalId = formData.goalId;\r\n    }\r\n\r\n    console.log('🎯 [DEBUG] Submitting transaction with goalId:', formData.goalId || 'None', 'Full data:', submissionData);\r\n    onSubmit(submissionData);\r\n    \r\n    // Reset form\r\n    setFormData({\r\n      type: 'expense',\r\n      category: '',\r\n      amount: '',\r\n      date: new Date().toISOString().split('T')[0],\r\n      goalId: '' \r\n    });\r\n  };\r\n\r\n  const safeGoals = Array.isArray(goals) ? goals : [];\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"bg-white p-4 rounded-lg shadow space-y-3\"\r\n    >\r\n      <div className=\"flex gap-3\">\r\n        <select\r\n          name=\"type\"\r\n          value={formData.type}\r\n          onChange={handleChange}\r\n          className=\"w-1/3 border rounded-lg px-3 py-2 text-sm\"\r\n          required\r\n        >\r\n          <option value=\"income\">Income</option>\r\n          <option value=\"expense\">Expense</option>\r\n        </select>\r\n        \r\n        <select\r\n          name=\"category\"\r\n          value={formData.category}\r\n          onChange={handleChange}\r\n          className=\"flex-1 border rounded-lg px-3 py-2 text-sm\"\r\n          required\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map(category => (\r\n            <option key={category} value={category}>\r\n              {category.charAt(0).toUpperCase() + category.slice(1).replace('_', ' ')}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      \r\n      <div className=\"flex gap-3\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={formData.amount}\r\n          onChange={handleChange}\r\n          placeholder=\"Amount (required)\"\r\n          className=\"flex-1 border rounded-lg px-3 py-2 text-sm\"\r\n          required\r\n          min=\"0.01\"\r\n          step=\"0.01\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={formData.date}\r\n          onChange={handleChange}\r\n          className=\"w-1/2 border rounded-lg px-3 py-2 text-sm\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      {/* Goal Selection Dropdown */}\r\n      <div>\r\n        <select\r\n          name=\"goalId\"\r\n          value={formData.goalId}\r\n          onChange={handleChange}\r\n          className=\"w-full border rounded-lg px-3 py-2 text-sm\"\r\n          disabled={loadingGoals}\r\n        >\r\n          <option value=\"\">-- Allocate to Goal (Optional) --</option>\r\n          {loadingGoals ? (\r\n            <option value=\"\" disabled>Loading goals...</option>\r\n          ) : error ? (\r\n            <option value=\"\" disabled>Error: {error}</option>\r\n          ) : safeGoals.length === 0 ? (\r\n            <option value=\"\" disabled>No goals found. Create goals first.</option>\r\n          ) : (\r\n            safeGoals.map(goal => (\r\n              <option key={goal._id} value={goal._id}>\r\n                {goal.name} - Target: KSH {goal.targetAmount?.toLocaleString()}\r\n              </option>\r\n            ))\r\n          )}\r\n        </select>\r\n        \r\n        {/* Debug info */}\r\n        <div className=\"text-xs text-gray-400 mt-1\">\r\n          Status: {loadingGoals ? 'Loading...' : error ? `Error: ${error}` : `Found ${safeGoals.length} goals`}\r\n        </div>\r\n      </div>\r\n      \r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400\"\r\n        disabled={loadingGoals}\r\n      >\r\n        {loadingGoals ? 'Loading...' : 'Add Transaction'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
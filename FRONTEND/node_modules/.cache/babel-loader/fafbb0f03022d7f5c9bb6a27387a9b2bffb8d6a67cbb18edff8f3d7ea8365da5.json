{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\PERSONAL_FINANCIAL_TRACKER\\\\FRONTEND\\\\src\\\\Components\\\\Transactions\\\\TransactionManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TransactionForm from './TransactionForm';\nimport TransactionItem from './TransactionItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionManager = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n\n  // Get token from localStorage\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Fetch transactions from backend\n  const fetchTransactions = async () => {\n    try {\n      const token = getToken();\n      const response = await fetch('http://localhost:5000/api/transaction', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setTransactions(data);\n      } else {\n        console.error('Failed to fetch transactions');\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  // Add transaction to backend\n  const addTransaction = async transactionData => {\n    try {\n      const token = getToken();\n\n      // Format the data for backend\n      const backendData = {\n        type: transactionData.type,\n        category: transactionData.category,\n        amount: Number(transactionData.amount),\n        date: transactionData.date,\n        description: transactionData.category // Using category as description\n      };\n      console.log('Sending transaction:', backendData);\n      const response = await fetch('http://localhost:5000/api/transaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(backendData)\n      });\n      if (response.ok) {\n        const newTransaction = await response.json();\n        setTransactions(prev => [...prev, newTransaction]);\n        console.log('Transaction saved successfully:', newTransaction);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to add transaction:', errorData);\n      }\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n\n  // Delete transaction from backend\n  const deleteTransaction = async id => {\n    try {\n      const token = getToken();\n      const response = await fetch(`http://localhost:5000/api/transaction/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setTransactions(prev => prev.filter(tx => tx._id !== id));\n      } else {\n        console.error('Failed to delete transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction:', error);\n    }\n  };\n\n  // Fetch transactions on component mount\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-gray-800\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onSubmit: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center py-8\",\n        children: \"No transactions yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : transactions.map(tx => /*#__PURE__*/_jsxDEV(TransactionItem, {\n        transaction: tx,\n        onDelete: deleteTransaction\n      }, tx._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionManager, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionManager;\nexport default TransactionManager;\nvar _c;\n$RefreshReg$(_c, \"TransactionManager\");","map":{"version":3,"names":["React","useState","useEffect","TransactionForm","TransactionItem","jsxDEV","_jsxDEV","TransactionManager","_s","transactions","setTransactions","getToken","localStorage","getItem","fetchTransactions","token","response","fetch","headers","ok","data","json","console","error","addTransaction","transactionData","backendData","type","category","amount","Number","date","description","log","method","body","JSON","stringify","newTransaction","prev","errorData","deleteTransaction","id","filter","tx","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","map","transaction","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/PERSONAL_FINANCIAL_TRACKER/FRONTEND/src/Components/Transactions/TransactionManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TransactionForm from './TransactionForm';\r\nimport TransactionItem from './TransactionItem';\r\n\r\nconst TransactionManager = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  // Get token from localStorage\r\n  const getToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  // Fetch transactions from backend\r\n  const fetchTransactions = async () => {\r\n    try {\r\n      const token = getToken();\r\n      const response = await fetch('http://localhost:5000/api/transaction', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setTransactions(data);\r\n      } else {\r\n        console.error('Failed to fetch transactions');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching transactions:', error);\r\n    }\r\n  };\r\n\r\n  // Add transaction to backend\r\n  const addTransaction = async (transactionData) => {\r\n    try {\r\n      const token = getToken();\r\n      \r\n      // Format the data for backend\r\n      const backendData = {\r\n        type: transactionData.type,\r\n        category: transactionData.category,\r\n        amount: Number(transactionData.amount),\r\n        date: transactionData.date,\r\n        description: transactionData.category // Using category as description\r\n      };\r\n\r\n      console.log('Sending transaction:', backendData);\r\n\r\n      const response = await fetch('http://localhost:5000/api/transaction', {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(backendData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newTransaction = await response.json();\r\n        setTransactions(prev => [...prev, newTransaction]);\r\n        console.log('Transaction saved successfully:', newTransaction);\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error('Failed to add transaction:', errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding transaction:', error);\r\n    }\r\n  };\r\n\r\n  // Delete transaction from backend\r\n  const deleteTransaction = async (id) => {\r\n    try {\r\n      const token = getToken();\r\n      \r\n      const response = await fetch(`http://localhost:5000/api/transaction/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        setTransactions(prev => prev.filter(tx => tx._id !== id));\r\n      } else {\r\n        console.error('Failed to delete transaction');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting transaction:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch transactions on component mount\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 space-y-6\">\r\n      <h1 className=\"text-2xl font-bold text-gray-800\">Transactions</h1>\r\n      \r\n      <TransactionForm onSubmit={addTransaction} />\r\n\r\n      <div className=\"space-y-3\">\r\n        {transactions.length === 0 ? (\r\n          <p className=\"text-gray-500 text-center py-8\">No transactions yet</p>\r\n        ) : (\r\n          transactions.map((tx) => (\r\n            <TransactionItem\r\n              key={tx._id}\r\n              transaction={tx}\r\n              onDelete={deleteTransaction}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionManager;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;MACxB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUH,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,eAAe,CAACU,IAAI,CAAC;MACvB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG,MAAOC,eAAe,IAAK;IAChD,IAAI;MACF,MAAMV,KAAK,GAAGJ,QAAQ,CAAC,CAAC;;MAExB;MACA,MAAMe,WAAW,GAAG;QAClBC,IAAI,EAAEF,eAAe,CAACE,IAAI;QAC1BC,QAAQ,EAAEH,eAAe,CAACG,QAAQ;QAClCC,MAAM,EAAEC,MAAM,CAACL,eAAe,CAACI,MAAM,CAAC;QACtCE,IAAI,EAAEN,eAAe,CAACM,IAAI;QAC1BC,WAAW,EAAEP,eAAe,CAACG,QAAQ,CAAC;MACxC,CAAC;MAEDN,OAAO,CAACW,GAAG,CAAC,sBAAsB,EAAEP,WAAW,CAAC;MAEhD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEiB,MAAM,EAAE,MAAM;QACdhB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUH,KAAK;QAClC,CAAC;QACDoB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,WAAW;MAClC,CAAC,CAAC;MAEF,IAAIV,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMmB,cAAc,GAAG,MAAMtB,QAAQ,CAACK,IAAI,CAAC,CAAC;QAC5CX,eAAe,CAAC6B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,cAAc,CAAC,CAAC;QAClDhB,OAAO,CAACW,GAAG,CAAC,iCAAiC,EAAEK,cAAc,CAAC;MAChE,CAAC,MAAM;QACL,MAAME,SAAS,GAAG,MAAMxB,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvCC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEiB,SAAS,CAAC;MACxD;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMkB,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI;MACF,MAAM3B,KAAK,GAAGJ,QAAQ,CAAC,CAAC;MAExB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCyB,EAAE,EAAE,EAAE;QAC1ER,MAAM,EAAE,QAAQ;QAChBhB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUH,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACG,EAAE,EAAE;QACfT,eAAe,CAAC6B,IAAI,IAAIA,IAAI,CAACI,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKH,EAAE,CAAC,CAAC;MAC3D,CAAC,MAAM;QACLpB,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACdY,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKwC,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CzC,OAAA;MAAIwC,SAAS,EAAC,kCAAkC;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElE7C,OAAA,CAACH,eAAe;MAACiD,QAAQ,EAAE5B;IAAe;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE7C7C,OAAA;MAAKwC,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBtC,YAAY,CAAC4C,MAAM,KAAK,CAAC,gBACxB/C,OAAA;QAAGwC,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAErE1C,YAAY,CAAC6C,GAAG,CAAEV,EAAE,iBAClBtC,OAAA,CAACF,eAAe;QAEdmD,WAAW,EAAEX,EAAG;QAChBY,QAAQ,EAAEf;MAAkB,GAFvBG,EAAE,CAACC,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACF;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAnHID,kBAAkB;AAAAkD,EAAA,GAAlBlD,kBAAkB;AAqHxB,eAAeA,kBAAkB;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}